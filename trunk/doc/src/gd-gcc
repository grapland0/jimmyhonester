GNU Compiler Collection是在GNU计划中编写的编译器。GCC是GNU计划中大多数软件的标准编译器，也是现代类unix的软件的事实标准编译器。GCC可以运行于非常多的系统平台，包括ARM,x86,PowerPC,system z等平台和Linux,bsd及各种UNIX实现版本，并且也能为很多系统平台生成目标代码，包括但不限于上述平台和系统。原始的GCC只能编译C语言，在80年代末，GCC逐渐支持编译C++,Ada,Fortran,Java等语言，全称也由GNU C Compiler改为GNU Compiler Collection.为了兼顾各种平台和各种语言，GCC使用了模块化的结构，分为前端，中间段和后端。被编译的代码首先进入前端，GCC在确定语言后调用相应的语言模块将原始代码文本解析处理为中间代码，此中间代码独立于语言，只表示控制流关系。中段负责读入前端生成的语言无关表示代码，进行各种分析，优化工作，最后本段输出利用临时变量的3地址代码。后端因机器不同而不同，不同的体系结构和操作系统的后端模块均是特制的。本段将中段生成的3地址代码转换为目标平台上的二进制代码。本解决方案利用GCC编译代码并且利用前端将代码基本块的信息嵌入目标代码，为后续的测量执行提供信息。


